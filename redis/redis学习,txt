windows 下安装直接下载个redis包 解压出来就行了里面有客户端和服务端可执行程序

redis是单线程的 redis是基于内存操作的，cpu不是redis性能瓶颈，redis得瓶颈是机器内存和网络带宽
既然单线程可以实现，就没用多线程

linux 默认安装路径 /usr/loacl/bin/     配置文件在/opt下

redis.config 修改
daemonize yes 配置redis后台启动

linux：在redis-server /你的配置文件
客户端连接 redis-cli -p 6379
输入 ping 输出PONG 证明连上了
默认是没有密码的 连上之后可以 config set requirepass “123456”设置密码  config get requirepass 获取密码信息 
通过 auth 123456 登录
shutdown 结束连接

redis 默认16个小数据库 默认使用第一个
flushdb 清空当前db
flushall 清空所有db
select 3 切换到第三个
dbsize查看当前db有多少数据

key的操作？ String 类型
set key wanglihang
mset k1 "值1" k2 "值二" 多键值设置   mget取得多个值
keys * 查看所有设置的key名字
exists key 判断这个key存不存在
expire key 10 设置key过期时间
ttl key 查看这个key还有多长时间过期
type key 查看这个key的类型
append key "hello" 追加
incr key   加一
decr key   减一
incrby key 10 在key值基础上加10
decrby key 10  减10操作

getrange key 0 5 取字符串0-5

setex key3 30 "hello" key3 30秒后过期 如果不存在才会创建，不会覆盖

String 类型使用场景：出了是字符串 也可以是整数 
可以做计数器  =》粉丝数
存 对象 user = {name:"wanglihang",age:18}    mset user:1:name "wanglihang"  user:1:age 18


List 类型 相当于一个数组
LPUSH key wanglihang，mutongben   取得LRANGE key 0 10
RPUSH key "right"          往右边插入
Lpop  key 移除头部元素
Rpop  key  移除尾部元素
lrem  key  1 "value"  移除指定一个值
lset  key  0  "item"  修改第0个位置的值
list 可以模拟消息队列、

Hash 类型 相当于map
Hash ：HMSET key name "wanglihang" description "hello"    取得：HGETALL key 


Set类型 set中的值不能重复
SADD key redis，mysql      取得 SMEMBERS key

Zset 排序的set 
ZADD key 1 redis
ZADD key 2 mongodb   取得 ZRANGE key 0 10 WITHSCORES

redis事务？
redis事务不能保证原子性  如果语法有错误 都不会执行，  运行时如果中间执行有错误 正确的语句还是会执行
multi 开启事务
exec 提交事务

mysql 乐观锁：不上锁，更新数据时候去判断一下在此期间有没有人改过这个数据，加一个version字段 每次有人更新都加1 
1.获取version  1
2.更新时候比较version 如果被别人改成了2 肯定就改不了了

redis乐观锁 ：通过 watch   watch money  这个钱只有当前watch的线程可以改
其他线程修改失败了 先 unwatch一下  在重新 watch money 

java 连接redis工具一般用Jedis  Jedis对象封装了所有指令到函数中

如果用springboot可以直接用redis模板 引入包 在application.yml里写配置



